# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run Tests with Maven
      run: |
        mvn test
        echo "Test Completed"
        

    - name: Jacoco File
      run: mvn clean verify

    - name: Upload Jar
      uses: actions/upload-artifact@v4
      with:
        name: Spring-bootA-App
        path: target/*.jar

    - name: Create Docker Image
      run:  |
        echo "Creating Docker Image"
        docker build -t spring-boot-app:latest .
        echo " Docker Image Created"
        

        


    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name : Tag image with Repo
      run: docker tag spring-boot-app:latest adit14/spring-boot-app-github-actions

    - name:  Push Image To Repo
      run : docker push adit14/spring-boot-app-github-actions

        


